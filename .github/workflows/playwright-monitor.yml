name: Playwright Site Status

on:
  schedule:
    - cron: "0 0 1 * *"
  workflow_dispatch:

jobs:
  site-check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        site: [AU, Ca]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies and Chromium only
        run: |
          npm install
          npx playwright install chromium

      - name: Run Playwright tests for ${{ matrix.site }}
        run: |
          SITE=${{ matrix.site }}
          SITE_UPPER=$(echo "$SITE" | tr '[:lower:]' '[:upper:]')
          mkdir -p reports/$SITE

          if npx playwright test sites/${SITE}.spec.ts --reporter=html --output=reports/$SITE; then
            echo "$SITE_UPPER check passed ✅" > reports/$SITE/combined-status.txt
          else
            echo "$SITE_UPPER check failed ❌" > reports/$SITE/combined-status.txt
          fi

      - name: Upload site report
        uses: actions/upload-artifact@v4
        with:
          name: report-${{ matrix.site }}
          path: reports/${{ matrix.site }}

      - name: Upload site status
        uses: actions/upload-artifact@v4
        with:
          name: status-${{ matrix.site }}
          path: reports/${{ matrix.site }}/combined-status.txt

  notify:
    needs: site-check
    runs-on: ubuntu-latest

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: all-reports

      - name: Merge status into file
        run: |
          find all-reports -type f -name "combined-status.txt" -exec cat {} \; > full-status.txt
          echo "✅ Final Merged Status Output:"
          cat full-status.txt

      - name: Zip all reports
        run: zip -r site-reports.zip all-reports

      - name: Send Slack Message (safe JSON)
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          ESCAPED=$(jq -Rs . < full-status.txt)
          echo "{\"text\": $ESCAPED}" > slack-payload.json

          curl -X POST -H 'Content-type: application/json' \
            --data @slack-payload.json \
            $SLACK_WEBHOOK_URL

      - name: Upload ZIP file to Slack
        env:
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
        run: |
          curl -F file=@site-reports.zip \
               -F "initial_comment=📎 Full report attached" \
               -F channels=#playwright \
               -H "Authorization: Bearer $SLACK_TOKEN" \
               https://slack.com/api/files.upload
