name: Playwright Site Status

on:
  schedule:
    - cron: "0 0 4 * *"
  workflow_dispatch:

jobs:
  site-check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        site: [AU]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies and Chromium only
        run: |
          npm install
          npx playwright install chromium

      - name: Run Playwright tests for ${{ matrix.site }}
        run: |
          SITE=${{ matrix.site }}
          mkdir -p reports/$SITE
          if npx playwright test tests/${SITE}_homepage.spec.ts --reporter=html --output=reports/$SITE; then
            echo "$SITE ✅ Site check passed" > reports/$SITE/combined-status.txt
          else
            echo "$SITE ❌ Site check failed" > reports/$SITE/combined-status.txt
          fi

      - name: Upload site report (optional for GitHub artifacts)
        uses: actions/upload-artifact@v4
        with:
          name: report-${{ matrix.site }}
          path: reports/${{ matrix.site }}

      - name: Upload site status
        uses: actions/upload-artifact@v4
        with:
          name: status-${{ matrix.site }}
          path: reports/${{ matrix.site }}/combined-status.txt

  notify:
    needs: site-check
    runs-on: ubuntu-latest

    steps:
      - name: Download all status artifacts
        uses: actions/download-artifact@v4
        with:
          path: all-reports

      - name: Merge site statuses
        run: |
          find all-reports -type f -name "combined-status.txt" -exec cat {} \; > full-status.txt
          echo "✅ Merged site status:"
          cat full-status.txt

      - name: Send Slack Notification (status only)
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          STATUS=$(cat full-status.txt)
          REPORT_LINK="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          MESSAGE="🔔 *Site Status Check Summary*\n\n$STATUS\n\n🔗 *View Report:* $REPORT_LINK"

          PAYLOAD=$(jq -n --arg text "$MESSAGE" '{text: $text}')
          echo "$PAYLOAD" > slack-payload.json

          curl -X POST -H 'Content-type: application/json' \
            --data @slack-payload.json \
            $SLACK_WEBHOOK_URL
