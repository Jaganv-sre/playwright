name: Playwright Site Status

on:
  schedule:
    - cron: "0 */3 * * *"  # Every 3 hours
  workflow_dispatch:

jobs:
  site-check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        site: [AU, Ca]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Check Node.js and npm version
        run: |
          node -v
          npm -v

      - name: Create fallback package.json if missing
        run: |
          if [ ! -f "package.json" ]; then
            echo '{' > package.json
            echo '  "name": "playwright-monitor",' >> package.json
            echo '  "version": "1.0.0",' >> package.json
            echo '  "scripts": { "test": "playwright test" },' >> package.json
            echo '  "devDependencies": { "@playwright/test": "^1.42.1", "typescript": "^5.3.3" }' >> package.json
            echo '}' >> package.json
          fi

      - name: Install dependencies
        run: |
          npm install
          npx playwright install --with-deps

      - name: Run Playwright tests for ${{ matrix.site }}
        run: |
          SITE=${{ matrix.site }}
          SITE_UPPER=$(echo "$SITE" | tr '[:lower:]' '[:upper:]')
          mkdir -p reports/$SITE
          if npx playwright test sites/${SITE}.spec.ts --reporter=html --output=reports/$SITE; then
            echo "$SITE_UPPER status is good" > reports/$SITE/combined-status.txt
          else
            echo "$SITE_UPPER check failed" > reports/$SITE/combined-status.txt
          fi

      - name: Upload site report
        uses: actions/upload-artifact@v4
        with:
          name: report-${{ matrix.site }}
          path: reports/${{ matrix.site }}

      - name: Upload site status
        uses: actions/upload-artifact@v4
        with:
          name: status-${{ matrix.site }}
          path: reports/${{ matrix.site }}/combined-status.txt

  notify:
    needs: site-check
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: all-reports

      - name: Merge status messages
        id: merge_status
        run: |
          STATUS_FILE="combined-status.txt"
          touch $STATUS_FILE
          find all-reports -type f -name "combined-status.txt" -exec cat {} \; >> $STATUS_FILE
          echo "status_message<<EOF" >> $GITHUB_OUTPUT
          cat $STATUS_FILE >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Zip all reports
        run: zip -r site-reports.zip all-reports

      - name: Read combined status safely
        id: read_status
        run: |
          if [ -f combined-status.txt ]; then
            RAW_STATUS=$(cat combined-status.txt)
            ESCAPED_STATUS=$(printf "%s" "$RAW_STATUS" | jq -Rs .)
            echo "status_message=$ESCAPED_STATUS" >> $GITHUB_OUTPUT
          else
            echo "status_message=\"No site status available.\"" >> $GITHUB_OUTPUT
          fi

      - name: Send status to Slack
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": "*Site Audit Completed*\n\n${{ steps.read_status.outputs.status_message }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Upload ZIP file to Slack
        env:
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
        run: |
          curl -F file=@site-reports.zip \
               -F "initial_comment= Full Site Reports" \
               -F channels=#new-channel \
               -H "Authorization: Bearer $SLACK_TOKEN" \
               https://slack.com/api/files.upload
