name: Playwright Site Status

on:
  schedule:
    - cron: "0 0 1 * *"
  workflow_dispatch:

jobs:
  site-check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        site: [AU]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies and Chromium only
        run: |
          npm install
          npx playwright install chromium

      - name: Run Playwright tests for ${{ matrix.site }}
        run: |
          SITE=${{ matrix.site }}
          SITE_UPPER=$(echo "$SITE" | tr '[:lower:]' '[:upper:]')
          mkdir -p reports/$SITE

          if npx playwright test sites/${SITE}.spec.ts --reporter=html --output=reports/$SITE; then
            echo "$SITE_UPPER check passed ✅" > reports/$SITE/combined-status.txt
          else
            echo "$SITE_UPPER check failed ❌" > reports/$SITE/combined-status.txt
          fi

      - name: Upload site report
        uses: actions/upload-artifact@v4
        with:
          name: report-${{ matrix.site }}
          path: reports/${{ matrix.site }}

      - name: Upload site status
        uses: actions/upload-artifact@v4
        with:
          name: status-${{ matrix.site }}
          path: reports/${{ matrix.site }}/combined-status.txt

      - name: Upload homepage screenshot
        if: matrix.site == 'AU'
        uses: actions/upload-artifact@v4
        with:
          name: homepage-screenshot
          path: screenshots/homepage.png

      - name: Upload homepage performance CSV
        if: matrix.site == 'AU'
        uses: actions/upload-artifact@v4
        with:
          name: homepage-csv
          path: reports/homepage_performance.csv

  notify:
    needs: site-check
    runs-on: ubuntu-latest

    steps:
      - name: Download homepage screenshot
        uses: actions/download-artifact@v4
        with:
          name: homepage-screenshot
          path: reports

      - name: Download homepage CSV
        uses: actions/download-artifact@v4
        with:
          name: homepage-csv
          path: reports

      - name: Zip screenshot and CSV
        run: |
          cd reports
          zip homepage-report.zip homepage.png homepage_performance.csv
          cd ..

      - name: Send ZIP report to Slack
        uses: Ilshidur/action-slack@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        with:
          args: ":spiral_note_pad: Homepage Screenshot + CSV Report attached"
          file: reports/homepage-report.zip
