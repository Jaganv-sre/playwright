name: Hourly Playwright Tests

on:
  schedule:
    # Run every hour
    - cron: '0 * * * *'
  workflow_dispatch:
    # Allow manual triggering

# Define environment variables
env:
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

jobs:
  test:
    name: Run Playwright Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium
      
      - name: Create screenshots directory
        run: mkdir -p ./screenshots
      
      - name: Run Playwright tests
        run: npx playwright test
        env:
          CI: true
      
      - name: Generate test report summary
        if: always()
        run: |
          echo "## Forbes Website Test Report" > report.txt
          echo "Run at: $(date)" >> report.txt
          echo "" >> report.txt
          
          # Get test statistics
          npx playwright show-report playwright-report --host localhost --port 9323 &
          sleep 5
          curl -s http://localhost:9323/api/report | jq > test-summary.json
          
          passed=$(jq '.stats.expected' test-summary.json)
          failed=$(jq '.stats.unexpected' test-summary.json)
          flaky=$(jq '.stats.flaky' test-summary.json)
          skipped=$(jq '.stats.skipped' test-summary.json)
          
          echo "### Test Results" >> report.txt
          echo "- ‚úÖ Passed: $passed" >> report.txt
          echo "- ‚ùå Failed: $failed" >> report.txt
          echo "- üîÑ Flaky: $flaky" >> report.txt
          echo "- ‚è≠Ô∏è Skipped: $skipped" >> report.txt
          echo "" >> report.txt
          
          # Add performance metrics
          echo "### Performance Analysis" >> report.txt
          grep -r "Top 5 slowest internal resources" test-results/ -A 10 | grep -v "ms" >> report.txt
          
          # Add failing tests if any
          if [ "$failed" -gt "0" ]; then
            echo "" >> report.txt
            echo "### Failed Tests" >> report.txt
            jq -r '.suites[].suites[].specs[] | select(.outcome=="unexpected") | "- " + .title' test-summary.json >> report.txt
          fi
          
          kill $(lsof -t -i:9323) || true
      
      - name: Send report to Slack
        if: always()
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload: |
            {
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "Forbes Website Test Results",
                    "emoji": true
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Run Summary:* ${{ job.status == 'success' && '‚úÖ All tests passed' || '‚ùå Some tests failed' }}\n*Date:* $(date)"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "```$(cat report.txt)```"
                  }
                },
                {
                  "type": "context",
                  "elements": [
                    {
                      "type": "mrkdwn",
                      "text": "<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View workflow run>"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
